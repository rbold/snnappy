/* create_es.hoc
 *
 * NEURON hoc code for implementing electrical synapses
 *
 * Copyright (c) 2012, Jeffrey P Gill and Shang-Shen Yu
 *
 * This file is part of NEURON Reconstruction of Susswein et al. 2002.
 * 
 * NEURON Reconstruction of Susswein et al. 2002 is free software: you can
 * redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of
 * the License, or (at your option) any later version.
 * 
 * NEURON Reconstruction of Susswein et al. 2002 is distributed in the hope
 * that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with NEURON Reconstruction of Susswein et al. 2002.  If not, see
 * <http://www.gnu.org/licenses/>.
 */


// LinearMechanism computes c*y' + g*y = b to find currents which are added to
// the current balance equations for each cell. Here, c is a zero matrix and b
// is a zero vector, so the expression becomes g*y, where g is a matrix of
// conductances and y is a vector of membrane potentials.

objref c, g, y, b, sl, xvec, es
c    = new Matrix(3,3,2)   // sparse (unallocated) zero matrix (efficient)
g    = new Matrix(3,3)
y    = new Vector(3)
b    = new Vector(3)
sl   = new SectionList()   // list of cells; order corresponds to y
xvec = new Vector(3, 0.5)  // locations of the synaptic connections

// add each cell to the SectionList
b63s sl.append()  // y[0] = b63s.v
b63a sl.append()  // y[1] = b63a.v
b31  sl.append()  // y[2] = b31.v

// create indices for clarity
b63s_ = 0
b63a_ = 1
b31_  = 2

// b63s receives current I =  0.11*b63s.v  - 0.11*b63a.v = 0.11*(b63s.v - b63a.v)
g.x[b63s_][b63s_] +=  0.11e-6    // (S/cm2)
g.x[b63s_][b63a_] += -0.11e-6    // (S/cm2)

// b63a receives current I = -0.11*b63s.v  + 0.11*b63a.v = 0.11*(b63a.v - b63s.v)
g.x[b63a_][b63s_] += -0.11e-6    // (S/cm2)
g.x[b63a_][b63a_] +=  0.11e-6    // (S/cm2)

// b63a receives current I =  0.045*b63a.v - 0.045*b31.v = 0.045*(b63a.v - b31.v)
// discrepancy between paper (0.12) and SNNAP code (0.045)
g.x[b63a_][b63a_] +=  0.045e-6   // (S/cm2)
g.x[b63a_][b31_]  += -0.045e-6   // (S/cm2)

// b31 receives current  I = -0.12*b63a.v  + 0.12*b31.v  = 0.12*(b31.v - b63a.v)
// discrepancy between paper (0.045) and SNNAP code (0.12)
g.x[b31_][b63a_]  += -0.12e-6    // (S/cm2)
g.x[b31_][b31_]   +=  0.12e-6    // (S/cm2)

// create the electrical synapses
es = new LinearMechanism(c, g, y, b, sl, xvec)
